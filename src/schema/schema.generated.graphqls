input CreateUserPayload {
  email: String!
  familyName: String
  givenName: String
  password: String!
}

union CreateUserResult = EmailUnavailable | UnknownError | User

type EmailUnavailable implements GraphError {
  code: Int!
  message: String!
}

interface GraphError {
  code: Int!
  message: String!
}

type Mutation {
  createUser(payload: CreateUserPayload!): CreateUserResult!
}

type Query {
  userById(id: ID!): UserResult!
}

type UnknownError implements GraphError {
  code: Int!
  message: String!
}

type User {
  email: String!
  familyName: String
  givenName: String
  id: ID!
}

type UserNotFound implements GraphError {
  code: Int!
  message: String!
}

union UserResult = UnknownError | User | UserNotFound