type UserNotFound implements GraphError {
  message: String!
  code: Int!
}

type User {
  id: ID!
  givenName: String
  familyName: String
  email: String!
}

union UserResult = User | UserNotFound | UnknownError

type InvalidCredentials implements GraphError {
  message: String!
  code: Int!
}

type UserSession {
  token: String!
  expiresAt: String!
}

union UserSessionResult =
    UserSession
  | UserNotFound
  | InvalidCredentials
  | UnknownError

extend type Query {
  me: UserResult!
  userById(id: ID!): UserResult!
}

input CreateUserPayload {
  givenName: String
  familyName: String
  email: String!
  password: String!
}

type EmailUnavailable implements GraphError {
  message: String!
  code: Int!
}

type UserAlreadyCreated implements GraphError {
  message: String!
  code: Int!
}

union CreateUserResult =
    User
  | EmailUnavailable
  | UserAlreadyCreated
  | UnknownError

input AuthenticateWithPasswordPayload {
  email: String!
  password: String!
}

input AuthenticateWithGoogleCodePayload {
  code: String!
}

extend type Mutation {
  createUser(payload: CreateUserPayload!): CreateUserResult!
  authenticateWithPassword(
    payload: AuthenticateWithPasswordPayload!
  ): UserSessionResult!
  authenticateWithGoogleCode(
    payload: AuthenticateWithGoogleCodePayload!
  ): UserSessionResult!
}
